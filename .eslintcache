[{"/home/quyet/FPT/pishop-web/src/pages/Cart.tsx":"1","/home/quyet/FPT/pishop-web/src/components/common/ListCommon.tsx":"2","/home/quyet/FPT/pishop-web/src/pages/ProductDetail.tsx":"3","/home/quyet/FPT/pishop-web/src/controllers/BaseController.ts":"4","/home/quyet/FPT/pishop-web/src/App.tsx":"5","/home/quyet/FPT/pishop-web/src/pages/Home.tsx":"6","/home/quyet/FPT/pishop-web/src/components/Layout.tsx":"7","/home/quyet/FPT/pishop-web/src/index.tsx":"8","/home/quyet/FPT/pishop-web/src/config/Config.ts":"9","/home/quyet/FPT/pishop-web/src/reportWebVitals.ts":"10","/home/quyet/FPT/pishop-web/src/components/common/SelectCommon.tsx":"11","/home/quyet/FPT/pishop-web/src/components/auth/Login.tsx":"12","/home/quyet/FPT/pishop-web/src/components/auth/Register.tsx":"13","/home/quyet/FPT/pishop-web/src/routes/AdminRoute.tsx":"14","/home/quyet/FPT/pishop-web/src/pages/admin/Dashboard.tsx":"15","/home/quyet/FPT/pishop-web/src/theme/muiTheme.ts":"16","/home/quyet/FPT/pishop-web/src/pages/admin/Dashboard2.tsx":"17","/home/quyet/FPT/pishop-web/src/pages/admin/ProductList.tsx":"18","/home/quyet/FPT/pishop-web/src/pages/NotFound.tsx":"19","/home/quyet/FPT/pishop-web/src/components/home/ProductFC.tsx":"20","/home/quyet/FPT/pishop-web/src/controllers/index.ts":"21","/home/quyet/FPT/pishop-web/src/controllers/ProductController.ts":"22","/home/quyet/FPT/pishop-web/src/components/table/Toolbar.tsx":"23","/home/quyet/FPT/pishop-web/src/pages/admin/ProductTable2.tsx":"24","/home/quyet/FPT/pishop-web/src/components/table/TableHead.tsx":"25","/home/quyet/FPT/pishop-web/src/components/PopUpEdit.tsx":"26","/home/quyet/FPT/pishop-web/src/components/ConfirmPopUp.tsx":"27","/home/quyet/FPT/pishop-web/src/pages/admin/CategoryTable.tsx":"28","/home/quyet/FPT/pishop-web/src/controllers/CategoryController.ts":"29","/home/quyet/FPT/pishop-web/src/components/table/TableHeadCategory.tsx":"30","/home/quyet/FPT/pishop-web/src/components/PopUpEditCategory.tsx":"31","/home/quyet/FPT/pishop-web/src/components/auth/AuthWrapper.tsx":"32","/home/quyet/FPT/pishop-web/src/utils/Utils.ts":"33"},{"size":123,"mtime":1611667465290,"results":"34","hashOfConfig":"35"},{"size":2917,"mtime":1615138766846,"results":"36","hashOfConfig":"35"},{"size":7011,"mtime":1615252872813,"results":"37","hashOfConfig":"35"},{"size":1664,"mtime":1615081667654,"results":"38","hashOfConfig":"35"},{"size":1290,"mtime":1615139002133,"results":"39","hashOfConfig":"35"},{"size":5917,"mtime":1615265088781,"results":"40","hashOfConfig":"35"},{"size":8630,"mtime":1615261422626,"results":"41","hashOfConfig":"35"},{"size":640,"mtime":1611669953272,"results":"42","hashOfConfig":"35"},{"size":257,"mtime":1614761757796,"results":"43","hashOfConfig":"35"},{"size":425,"mtime":1611667465290,"results":"44","hashOfConfig":"35"},{"size":880,"mtime":1613879514418,"results":"45","hashOfConfig":"35"},{"size":4858,"mtime":1615259335653,"results":"46","hashOfConfig":"35"},{"size":5401,"mtime":1615260618332,"results":"47","hashOfConfig":"35"},{"size":1029,"mtime":1615265154300,"results":"48","hashOfConfig":"35"},{"size":5896,"mtime":1615265179664,"results":"49","hashOfConfig":"35"},{"size":800,"mtime":1615109210352,"results":"50","hashOfConfig":"35"},{"size":533,"mtime":1614421162863,"results":"51","hashOfConfig":"35"},{"size":12267,"mtime":1614425122187,"results":"52","hashOfConfig":"35"},{"size":140,"mtime":1611667465290,"results":"53","hashOfConfig":"35"},{"size":2573,"mtime":1615258054399,"results":"54","hashOfConfig":"35"},{"size":351,"mtime":1614912676559,"results":"55","hashOfConfig":"35"},{"size":263,"mtime":1614906342278,"results":"56","hashOfConfig":"35"},{"size":5445,"mtime":1614916787767,"results":"57","hashOfConfig":"35"},{"size":8221,"mtime":1615269773248,"results":"58","hashOfConfig":"35"},{"size":2586,"mtime":1615080887179,"results":"59","hashOfConfig":"35"},{"size":5930,"mtime":1615267314769,"results":"60","hashOfConfig":"35"},{"size":916,"mtime":1614902561290,"results":"61","hashOfConfig":"35"},{"size":7173,"mtime":1615109302085,"results":"62","hashOfConfig":"35"},{"size":315,"mtime":1614912675451,"results":"63","hashOfConfig":"35"},{"size":2442,"mtime":1615081815388,"results":"64","hashOfConfig":"35"},{"size":1390,"mtime":1614912530951,"results":"65","hashOfConfig":"35"},{"size":581,"mtime":1615187594337,"results":"66","hashOfConfig":"35"},{"size":130,"mtime":1615105969319,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rbgdio",{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/quyet/FPT/pishop-web/src/pages/Cart.tsx",[],["159","160"],"/home/quyet/FPT/pishop-web/src/components/common/ListCommon.tsx",["161","162","163","164"],"import { Checkbox, ListItemIcon, ListSubheader } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t\tmaxWidth: 360,\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t},\n\t\tmuiListItemRoot: {\n\t\t\tborderRadius: 5,\n\t\t},\n\t\tmuiListItemSelected: {\n\t\t\tcolor: theme.palette.primary.main,\n\t\t\tbackgroundColor: \"transparent !important\",\n\t\t},\n\t\tselectedText: {\n\t\t\t\"& span\": {\n\t\t\t\tfontWeight: 600,\n\t\t\t},\n\t\t},\n\t})\n);\n\nexport interface CommonListProps {\n\tid: string;\n\tlabel: string;\n}\n\ntype Props = {\n\titems: CommonListProps[];\n\tonChange?(items: CommonListProps): void;\n};\n\nexport default function ListCommon(props: Props) {\n\tconst classes = useStyles();\n\tconst [selectedIndex, setSelectedIndex] = useState(-1);\n\tconst [brand, setBrand] = useState<string[]>([]);\n\n\tconst handleListItemClick = (\n\t\tevent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n\t\tindex: number\n\t) => {\n\t\tsetSelectedIndex(index);\n\t};\n\n\t// const list = [\"Apple\", \"XiaoMi\", \"Oppo\", \"Samsung\", \"Vivo\", \"Nokia\"];\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<List\n\t\t\t\tsubheader={<ListSubheader>Brand</ListSubheader>}\n\t\t\t\tcomponent=\"nav\"\n\t\t\t\taria-label=\"main mailbox folders\"\n\t\t\t>\n\t\t\t\t{props.items.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tselected={selectedIndex === index}\n\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\thandleListItemClick(event, index);\n\t\t\t\t\t\t\t\tif (index !== selectedIndex) props.onChange && props.onChange(item);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.muiListItemRoot,\n\t\t\t\t\t\t\t\tselected: classes.muiListItemSelected,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* <ListItemIcon>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\t\tchecked={brand.indexOf(item.id) !== -1}\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": item.id }}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItemIcon> */}\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tprimary={item.label}\n\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\troot:\n\t\t\t\t\t\t\t\t\t\tselectedIndex === index ? classes.selectedText : undefined,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t{/* <List component=\"nav\" aria-label=\"secondary mailbox folder\">\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\tselected={selectedIndex === 2}\n\t\t\t\t\tonClick={(event) => handleListItemClick(event, 2)}\n\t\t\t\t>\n\t\t\t\t\t<ListItemText primary=\"Trash\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\tselected={selectedIndex === 3}\n\t\t\t\t\tonClick={(event) => handleListItemClick(event, 3)}\n\t\t\t\t>\n\t\t\t\t\t<ListItemText primary=\"Spam\" />\n\t\t\t\t</ListItem>\n\t\t\t</List> */}\n\t\t</div>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/pages/ProductDetail.tsx",["165","166","167"],"import {\n\tBox,\n\tButton,\n\tContainer,\n\tDivider,\n\tGrid,\n\tmakeStyles,\n\tTypography,\n\twithStyles,\n} from \"@material-ui/core\";\nimport { Add, ShoppingCartOutlined } from \"@material-ui/icons\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Layout from \"../components/Layout\";\nimport { productController } from \"../controllers\";\nimport { Product } from \"../models/Product\";\nimport { theme } from \"../theme/muiTheme\";\nimport { convertMonney } from \"../utils/Utils\";\nimport Cart from \"./Cart\";\n\ninterface ParamTypes {\n\tproductId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\ttoggleButton: {\n\t\t\"& button\": {\n\t\t\tborderRadius: \"50% !important\",\n\t\t\tmarginRight: 16,\n\t\t\tpadding: 6,\n\t\t\tbackground: \"none !important\",\n\t\t\t\"&:hover\": {\n\t\t\t\tbackgroundColor: \"unset\",\n\t\t\t},\n\t\t\t\"&.MuiToggleButton-root.Mui-selected\": {\n\t\t\t\tborder: \"1px solid !important\",\n\t\t\t},\n\t\t},\n\t},\n\titemColor: {\n\t\twidth: 40,\n\t\theight: 40,\n\t\tborderRadius: \"50%\",\n\t},\n\ttoggleButtonSize: {\n\t\t\"& button\": {\n\t\t\tpadding: \"8px 16px\",\n\t\t\tbackground: \"none !important\",\n\t\t\t\"&:hover\": {\n\t\t\t\tbackgroundColor: \"unset\",\n\t\t\t},\n\t\t\t\"&.MuiToggleButton-root.Mui-selected\": {\n\t\t\t\tborder: \"1px solid !important\",\n\t\t\t},\n\t\t},\n\t},\n}));\n\nconst StyledToggleButtonGroup = withStyles((theme) => ({\n\tgrouped: {\n\t\tmargin: theme.spacing(0.5),\n\t\tborder: \"none\",\n\t\t\"&:not(:first-child)\": {\n\t\t\tborderRadius: theme.shape.borderRadius,\n\t\t},\n\t\t\"&:first-child\": {\n\t\t\tborderRadius: theme.shape.borderRadius,\n\t\t},\n\t},\n}))(ToggleButtonGroup);\n\nexport default function ProductDetail(props: Props) {\n\tconst { productId } = useParams<ParamTypes>();\n\tconst classes = useStyles();\n\tconst { enqueueSnackbar } = useSnackbar();\n\n\tconst [product, setProduct] = useState<Product>({\n\t\tdescription: \"\",\n\t\tdiscount: 0,\n\t\tid: \"\",\n\t\tname: \"\",\n\t\tprice: 0,\n\t\tquantity: 0,\n\t\tcategoryId: \"\",\n\t});\n\n\tconst [size, setSize] = useState<number>(64);\n\n\tconst [color, setColor] = useState<string>(\"red\");\n\tuseEffect(() => {\n\t\tproductController.findById(parseInt(productId)).then((res) => {\n\t\t\tsetProduct(res);\n\t\t});\n\t}, []);\n\n\tconst [cartLength, setCartLength] = useState<number>(0);\n\n\treturn (\n\t\t<Layout cartLength={cartLength}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: \"-5px 5px 15px #ededed, 5px -5px 15px #ffffff\",\n\t\t\t\t\t\tborderRadius: 10,\n\t\t\t\t\t\tpadding: `40px 32px`,\n\t\t\t\t\t\tboxSizing: \"border-box\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Box height={400}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={product.thumbs ? (product.thumbs as any) : \"\"}\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\tstyle={{ objectFit: \"contain\", width: \"100%\", height: \"100%\" }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Box pl={7}>\n\t\t\t\t\t\t\t<Typography variant={\"h6\"}>{product.name}</Typography>\n\n\t\t\t\t\t\t\t<Box mt={1}></Box>\n\t\t\t\t\t\t\t{product.discount > 0 ? (\n\t\t\t\t\t\t\t\t<Typography display=\"inline\" variant={\"h6\"}>\n\t\t\t\t\t\t\t\t\t{convertMonney(\n\t\t\t\t\t\t\t\t\t\t(product.price / 100) * (100 - product.discount)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"line-through\" }}\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{convertMonney(product.price)}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Typography variant={\"h6\"}>\n\t\t\t\t\t\t\t\t\t{convertMonney(product.price)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Box my={2}>\n\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Box mb={1}>\n\t\t\t\t\t\t\t\t\t<Typography variant={\"h6\"}>Size</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<StyledToggleButtonGroup\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tvalue={size}\n\t\t\t\t\t\t\t\t\texclusive\n\t\t\t\t\t\t\t\t\tonChange={(e, v) => v && setSize(v as number)}\n\t\t\t\t\t\t\t\t\taria-label=\"text alignment\"\n\t\t\t\t\t\t\t\t\tclassName={classes.toggleButtonSize}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tvalue={64}\n\t\t\t\t\t\t\t\t\t\taria-label=\"left aligned\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 600 }}>64GB</Typography>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton disableRipple value={128} aria-label=\"centered\">\n\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 600 }}>128GB</Typography>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tvalue={256}\n\t\t\t\t\t\t\t\t\t\taria-label=\"right aligned\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 600 }}>256GB</Typography>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton disableRipple value={512} aria-label=\"justified\">\n\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 600 }}>512GB</Typography>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t</StyledToggleButtonGroup>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box mt={3}>\n\t\t\t\t\t\t\t\t<Box mb={1}>\n\t\t\t\t\t\t\t\t\t<Typography variant={\"h6\"}>Color</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<StyledToggleButtonGroup\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\t\t\t\texclusive\n\t\t\t\t\t\t\t\t\tonChange={(e, v) => v && setColor(v)}\n\t\t\t\t\t\t\t\t\taria-label=\"text alignment\"\n\t\t\t\t\t\t\t\t\tclassName={classes.toggleButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tvalue=\"red\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"left aligned\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"red\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.itemColor}\n\t\t\t\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton disableRipple value=\"black\" aria-label=\"centered\">\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.itemColor}\n\t\t\t\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tvalue=\"blue\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"right aligned\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#0066c0\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.itemColor}\n\t\t\t\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tvalue=\"green\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"justified\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#ccf5d9\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.itemColor}\n\t\t\t\t\t\t\t\t\t\t></Box>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t</StyledToggleButtonGroup>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box mt={2} mb={3}>\n\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box display=\"flex\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstartIcon={<Add />}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetCartLength(cartLength + 1);\n\t\t\t\t\t\t\t\t\t\tenqueueSnackbar(\"The product has been added to cart!\")\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd To Cart\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Box mx={1.5}></Box>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstartIcon={<ShoppingCartOutlined />}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBuy now\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{ marginTop: theme.spacing(7) }}>\n\t\t\t\t\t<Typography variant={\"h6\"}>Description</Typography>\n\n\t\t\t\t\t<Box mt={3}>\n\t\t\t\t\t\t<Typography>{product.description}</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n}\n\ntype Props = {};\n",["168","169"],"/home/quyet/FPT/pishop-web/src/controllers/BaseController.ts",[],["170","171"],"/home/quyet/FPT/pishop-web/src/App.tsx",[],["172","173"],"/home/quyet/FPT/pishop-web/src/pages/Home.tsx",["174","175","176"],"/home/quyet/FPT/pishop-web/src/components/Layout.tsx",[],"/home/quyet/FPT/pishop-web/src/index.tsx",[],["177","178"],"/home/quyet/FPT/pishop-web/src/config/Config.ts",[],["179","180"],"/home/quyet/FPT/pishop-web/src/reportWebVitals.ts",[],"/home/quyet/FPT/pishop-web/src/components/common/SelectCommon.tsx",[],["181","182"],"/home/quyet/FPT/pishop-web/src/components/auth/Login.tsx",["183","184","185","186","187"],"import { Box, Button, Grid, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { LockOutlined, PersonOutline } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { appConfig } from \"../../config/Config\";\nimport { theme } from \"../../theme/muiTheme\";\nimport AuthWrapper from \"./AuthWrapper\";\n\nconst validate = (values: any) => {\n\tconst errors: any = {};\n\tif (!values.username) {\n\t\terrors.username = \"Required\";\n\t}\n\n\tif (!values.password) {\n\t\terrors.password = \"Required\";\n\t}\n\n\treturn errors;\n};\n\nexport default function Login(props: Props) {\n\tconst history = useHistory();\n\tconst [error, setError] = useState<string>(\"\");\n\tconst { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\tconst { url, path } = useRouteMatch();\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\",\n\t\t},\n\t\tvalidate,\n\t\tonSubmit: (values, { setSubmitting }) => {\n\t\t\tsetSubmitting(true);\n\t\t\tconst url = path.includes(\"admin\")\n\t\t\t\t? `${appConfig.apiGatewayURL}/admin/login`\n\t\t\t\t: `${appConfig.apiGatewayURL}/login`;\n\t\t\taxios\n\t\t\t\t.post(url, { ...values })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify({ ...values }));\n\t\t\t\t\tpath.includes(\"admin\") ? history.push(`/admin/product`) : history.push(`/`);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tsetError(err.response.data.message);\n\t\t\t\t})\n\t\t\t\t.finally(() => setSubmitting(false));\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tconst json = localStorage.getItem(\"user\");\n\t\tif (!path.includes(\"admin\") && json) {\n\t\t\thistory.push(\"/\");\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<AuthWrapper>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<Grid container direction=\"column\" spacing={2}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Typography variant=\"h4\" style={{ fontWeight: 600 }}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs style={{ marginTop: 8 }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tvalue={formik.values.username}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<PersonOutline color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={!!formik.touched.username && !!formik.errors.username}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.username && formik.errors.username\n\t\t\t\t\t\t\t\t\t? formik.errors.username\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<LockOutlined color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={!!formik.touched.password && !!formik.errors.password}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t\t? formik.errors.password\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={formik.isSubmitting}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype={\"submit\"}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tstyle={{ boxShadow: \"unset\", marginTop: theme.spacing(1) }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Typography align=\"center\">or sign in with</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item container>\n\t\t\t\t\t\t<Box mr={2} flex={1}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ background: \"#00000005\", boxShadow: \"unset\" }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t// startIcon={<FcGoogle />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGoogle\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<Box flex={1}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ background: \"#00000005\", boxShadow: \"unset\" }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t// startIcon={\n\t\t\t\t\t\t\t\t// <FaFacebookSquare style={{ color: theme.palette.primary.dark }} />\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFacebook\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography align=\"center\">\n\t\t\t\t\t\t\tDon't have an account ?{\"  \"}\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tonClick={() => history.push(\"/sign-up\")}\n\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\tstyle={{ color: theme.palette.primary.main, cursor: \"pointer\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign up NOW\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</AuthWrapper>\n\t);\n}\n\ntype Props = {\n\t// onSignUp?(user: UserLogin): void;\n};\n\ninterface UserLogin {\n\tusername: string;\n\tpassword: string;\n}\n",["188","189"],"/home/quyet/FPT/pishop-web/src/components/auth/Register.tsx",["190"],"import { Button, Grid, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { EmailOutlined, LockOutlined, PersonOutline } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { appConfig } from \"../../config/Config\";\nimport { theme } from \"../../theme/muiTheme\";\nimport AuthWrapper from \"./AuthWrapper\";\n\nexport default function Register(props: Props) {\n\tconst history = useHistory();\n\tconst [error, setError] = useState<string>(\"\");\n\tconst {enqueueSnackbar} = useSnackbar();\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\",\n\t\t\tconfirmPassword: \"\",\n\t\t\temail: \"\",\n\t\t},\n\t\tvalidationSchema: Yup.object({\n\t\t\tusername: Yup.string().required(\"Required\"),\n\t\t\tpassword: Yup.string().required(\"Required\"),\n\t\t\tconfirmPassword: Yup.string().required(\"Required\"),\n\t\t\temail: Yup.string().required(\"Required\").email(\"Email is invalid!\"),\n\t\t}),\n\t\tonSubmit: async (values) => {\n\t\t\tif (values.password !== values.confirmPassword) {\n\t\t\t\tformik.setErrors({\n\t\t\t\t\t...formik.errors,\n\t\t\t\t\tconfirmPassword: \"Confirm password incorrect!\",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taxios\n\t\t\t\t\t.post(`${appConfig.apiGatewayURL}/create`, { ...values })\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tenqueueSnackbar(\"Create successfully!\", {variant: \"success\"})\n\t\t\t\t\t\thistory.push(\"/login\");\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tlet status = err.response.status;\n\n\t\t\t\t\t\tif (status === 411) {\n\t\t\t\t\t\t\tformik.setErrors({ ...formik.errors, username: \"Username is exist!\" });\n\t\t\t\t\t\t} else if (status === 412) {\n\t\t\t\t\t\t\tformik.setErrors({ ...formik.errors, email: \"Email is exist!\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t});\n\treturn (\n\t\t<AuthWrapper>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<Grid container direction=\"column\" spacing={2}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Typography variant=\"h4\" style={{ fontWeight: 600 }}>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs style={{ marginTop: 8 }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<PersonOutline color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={!!formik.touched.username && !!formik.errors.username}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.username && formik.errors.username\n\t\t\t\t\t\t\t\t\t? formik.errors.username\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<LockOutlined color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={!!formik.touched.password && !!formik.errors.password}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t\t? formik.errors.password\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<LockOutlined color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t!!formik.touched.confirmPassword && !!formik.errors.confirmPassword\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.confirmPassword && formik.errors.confirmPassword\n\t\t\t\t\t\t\t\t\t? formik.errors.confirmPassword\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<EmailOutlined color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\terror={!!formik.touched.email && !!formik.errors.email}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!!formik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t\t? formik.errors.email\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tstyle={{ boxShadow: \"unset\", marginTop: theme.spacing(1) }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography align=\"center\">\n\t\t\t\t\t\t\tAlready have an account ?{\"  \"}\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tonClick={() => history.push(\"/login\")}\n\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\tstyle={{ color: theme.palette.primary.main, cursor: \"pointer\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In HERE\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</AuthWrapper>\n\t);\n}\n\ntype Props = {\n\t// onSignIn(): void;\n};\n","/home/quyet/FPT/pishop-web/src/routes/AdminRoute.tsx",["191","192"],"import React from \"react\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport AuthWrapper from \"../components/auth/AuthWrapper\";\nimport Login from \"../components/auth/Login\";\nimport CategoryTable from \"../pages/admin/CategoryTable\";\nimport Dashboard from \"../pages/admin/Dashboard\";\nimport ProductTable2 from \"../pages/admin/ProductTable2\";\n\nexport default function AdminRoute() {\n\tconst { path, url } = useRouteMatch();\n\n\treturn (\n\t\t<div >\n\t\t\t<Switch>\n\t\t\t\t<Route exact path={`${path}/login`}>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${path}/dashboard`}>\n\t\t\t\t\t<Dashboard title=\"Dashboard\" />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${path}/product`}>\n\t\t\t\t\t<Dashboard title=\"Product\">\n\t\t\t\t\t\t<ProductTable2 />\n\t\t\t\t\t</Dashboard>\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${path}/category`}>\n\t\t\t\t\t<Dashboard title=\"Category\">\n\t\t\t\t\t\t<CategoryTable />\n\t\t\t\t\t</Dashboard>\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${path}`}>\n\t\t\t\t\t<Redirect to={`${path}/product`} />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/pages/admin/Dashboard.tsx",["193","194","195","196","197","198"],"import { Avatar, Box, Breadcrumbs, Link } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { createStyles, makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n\tBurstModeRounded,\n\tDashboardRounded,\n\tQueueRounded,\n\tSettings,\n\tSettingsRounded,\n} from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductList from \"./ProductList\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tdisplay: \"flex\",\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tbackground: \"transparent\",\n\t\t\tboxShadow: \"unset\",\n\t\t\ttransition: theme.transitions.create([\"width\", \"margin\"], {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t\t}),\n\t\t},\n\t\tappBarShift: {\n\t\t\tmarginLeft: drawerWidth,\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\ttransition: theme.transitions.create([\"width\", \"margin\"], {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t\t}),\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: 36,\n\t\t},\n\t\thide: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\tdrawer: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t\twhiteSpace: \"nowrap\",\n\t\t},\n\t\tdrawerOpen: {\n\t\t\twidth: drawerWidth,\n\t\t\ttransition: theme.transitions.create(\"width\", {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t\t}),\n\t\t},\n\t\tdrawerClose: {\n\t\t\ttransition: theme.transitions.create(\"width\", {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t\t}),\n\t\t\toverflowX: \"hidden\",\n\t\t\twidth: theme.spacing(7) + 1,\n\t\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\t\twidth: theme.spacing(9) + 1,\n\t\t\t},\n\t\t},\n\t\ttoolbar: {\n\t\t\tdisplay: \"flex\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"flex-end\",\n\t\t\tpadding: theme.spacing(0, 1),\n\t\t\t// necessary for content to be below app bar\n\t\t\t...theme.mixins.toolbar,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tpadding: 64,\n\t\t},\n\t})\n);\n\nconst list: { icon: JSX.Element; label: string, path: string }[] = [\n\t{ icon: <DashboardRounded />, label: \"Dashboard\",path: \"/admin/dashboard\" },\n\t{ icon: <QueueRounded />, label: \"Product\", path: \"/admin/product\" },\n\t{ icon: <BurstModeRounded />, label: \"Category\", path: \"/admin/category\" },\n];\n\ntype Props = {\n\tchildren?: any;\n\ttitle: string;\n}\n\nexport default function MiniDrawer(props: Props) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [open, setOpen] = React.useState(true);\n\tconst [selectedIndex, setSelectedIndex] = useState<number>(1);\n\tconst history = useHistory();\n\n\tconst handleListItemClick = (\n\t\tevent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n\t\tindex: number\n\t) => {\n\t\tsetSelectedIndex(index);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar\n\t\t\t\tposition=\"fixed\"\n\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{/* <IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, {\n\t\t\t\t\t\t\t[classes.hide]: open,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton> */}\n\t\t\t\t\t<Box\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t// background: \"#eee\",\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tjustifyContent: \"flex-end\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton edge=\"start\">\n\t\t\t\t\t\t\t<SettingsRounded fontSize=\"small\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Box mx={0.5}></Box>\n\t\t\t\t\t\t<Avatar style={{ backgroundColor: \"red\" }}>A</Avatar>\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tvariant=\"permanent\"\n\t\t\t\tclassName={clsx(classes.drawer, {\n\t\t\t\t\t[classes.drawerOpen]: open,\n\t\t\t\t\t[classes.drawerClose]: !open,\n\t\t\t\t})}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx({\n\t\t\t\t\t\t[classes.drawerOpen]: open,\n\t\t\t\t\t\t[classes.drawerClose]: !open,\n\t\t\t\t\t}),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.toolbar}>\n\t\t\t\t\t{/* <IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n\t\t\t\t\t</IconButton> */}\n\t\t\t\t</div>\n\t\t\t\t<Divider />\n\t\t\t\t<List component=\"nav\">\n\t\t\t\t\t{list.map((item, index) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tselected={selectedIndex === index}\n\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\thandleListItemClick(event, index);\n\t\t\t\t\t\t\t\thistory.push(item.path);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkey={item.label}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={item.label} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t{/* <Divider />\n\t\t\t\t<List>\n\t\t\t\t\t{[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n\t\t\t\t\t\t<ListItem button key={text}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={text} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List> */}\n\t\t\t</Drawer>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\n\t\t\t\t<Typography variant=\"h6\">{props.title}</Typography>\n\n\t\t\t\t<Box mt={1}>\n\t\t\t\t\t<Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n\t\t\t\t\t\t<Link color=\"inherit\" href=\"/\">\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Typography color=\"textPrimary\">{props.title}</Typography>\n\t\t\t\t\t</Breadcrumbs>\n\t\t\t\t</Box>\n\t\t\t\t<Box mt={3}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</Box>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n",["199","200"],"/home/quyet/FPT/pishop-web/src/theme/muiTheme.ts",[],["201","202"],"/home/quyet/FPT/pishop-web/src/pages/admin/Dashboard2.tsx",[],"/home/quyet/FPT/pishop-web/src/pages/admin/ProductList.tsx",["203","204","205","206","207","208"],"import { Box, FormControl, InputAdornment, OutlinedInput, TextField } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, lighten, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Edit, Search } from \"@material-ui/icons\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { theme } from \"../../theme/muiTheme\";\n\ninterface Data {\n\tcalories: number;\n\tcarbs: number;\n\tfat: number;\n\tname: string;\n\tprotein: number;\n}\n\nfunction createData(\n\tname: string,\n\tcalories: number,\n\tfat: number,\n\tcarbs: number,\n\tprotein: number\n): Data {\n\treturn { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n\tcreateData(\"Cupcake\", 305, 3.7, 67, 4.3),\n\tcreateData(\"Donut\", 452, 25.0, 51, 4.9),\n\tcreateData(\"Eclair\", 262, 16.0, 24, 6.0),\n\tcreateData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n\tcreateData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n\tcreateData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n\tcreateData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n\tcreateData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n\tcreateData(\"KitKat\", 518, 26.0, 65, 7.0),\n\tcreateData(\"Lollipop\", 392, 0.2, 98, 0.0),\n\tcreateData(\"Marshmallow\", 318, 0, 81, 2.0),\n\tcreateData(\"Nougat\", 360, 19.0, 9, 37.0),\n\tcreateData(\"Oreo\", 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n\tif (b[orderBy] < a[orderBy]) {\n\t\treturn -1;\n\t}\n\tif (b[orderBy] > a[orderBy]) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\ntype Order = \"asc\" | \"desc\";\n\nfunction getComparator<Key extends keyof any>(\n\torder: Order,\n\torderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n\treturn order === \"desc\"\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n\tconst stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0], b[0]);\n\t\tif (order !== 0) return order;\n\t\treturn a[1] - b[1];\n\t});\n\treturn stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n\tid: keyof Data | \"actions\";\n\tlabel: string;\n\tnumeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n\t{ id: \"name\", numeric: false, label: \"Product\" },\n\t{ id: \"calories\", numeric: true, label: \"Price\" },\n\t{ id: \"fat\", numeric: true, label: \"Quantity\" },\n\t{ id: \"carbs\", numeric: true, label: \"Discount\" },\n\t{ id: \"protein\", numeric: true, label: \"Category\" },\n\t// { id: \"protein\", numeric: true, label: \"Created at\" },\n\t{ id: \"actions\", numeric: true, label: \"\" },\n];\n\ninterface EnhancedTableProps {\n\tclasses: ReturnType<typeof useStyles>;\n\tnumSelected: number;\n\tonRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n\tonSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\torder: Order;\n\torderBy: string;\n\trowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n\tconst {\n\t\tclasses,\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n\t\tonRequestSort(event, property);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding=\"checkbox\">\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"select all desserts\" }}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells\n\t\t\t\t\t.map((headCell) => (\n\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\t\talign={headCell.numeric ? \"right\" : \"left\"}\n\t\t\t\t\t\t\t// padding={headCell.disablePadding ? \"none\" : \"default\"}\n\t\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : \"asc\"}\n\t\t\t\t\t\t\t\t// onClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\n\t\t\t\t\t\t\t\t\t\t{order === \"desc\"\n\t\t\t\t\t\t\t\t\t\t\t? \"sorted descending\"\n\t\t\t\t\t\t\t\t\t\t\t: \"sorted ascending\"}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tpadding: \"16px 24px\",\n\t\t\tdisplay: \"flex\",\n\t\t\tjustifyContent: \"space-between\",\n\t\t},\n\t\thighlight:\n\t\t\ttheme.palette.type === \"light\"\n\t\t\t\t? {\n\t\t\t\t\t\tcolor: theme.palette.secondary.main,\n\t\t\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\tcolor: theme.palette.text.primary,\n\t\t\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\n\t\t\t\t  },\n\t\ttitle: {\n\t\t\tflex: \"1 1 100%\",\n\t\t},\n\t})\n);\n\ninterface EnhancedTableToolbarProps {\n\tnumSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t>\n\t\t\t\t\t{numSelected} selected\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t<FormControl variant=\"outlined\">\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tid=\"outlined-adornment-amount\"\n\t\t\t\t\t\t//   onChange={handleChange('amount')}\n\t\t\t\t\t\tstartAdornment={\n\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t<Search color=\"disabled\" />\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t<IconButton aria-label=\"delete\">\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t) : (\n\t\t\t\t<Tooltip title=\"Filter list\">\n\t\t\t\t\t<IconButton aria-label=\"filter list\">\n\t\t\t\t\t\t<FilterListIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\t\t</Toolbar>\n\t);\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\tpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t\ttable: {\n\t\t\tminWidth: 750,\n\t\t},\n\t\tvisuallyHidden: {\n\t\t\tborder: 0,\n\t\t\tclip: \"rect(0 0 0 0)\",\n\t\t\theight: 1,\n\t\t\tmargin: -1,\n\t\t\toverflow: \"hidden\",\n\t\t\tpadding: 0,\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 20,\n\t\t\twidth: 1,\n\t\t},\n\t})\n);\n\nexport default function ProductList() {\n\tconst classes = useStyles();\n\tconst [order, setOrder] = React.useState<Order>(\"asc\");\n\tconst [orderBy, setOrderBy] = React.useState<keyof Data>(\"calories\");\n\tconst [selected, setSelected] = React.useState<string[]>([]);\n\tconst [page, setPage] = React.useState(0);\n\tconst [dense, setDense] = React.useState(false);\n\tconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n\tconst handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n\t\tconst isAsc = orderBy === property && order === \"asc\";\n\t\tsetOrder(isAsc ? \"desc\" : \"asc\");\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.checked) {\n\t\t\tconst newSelecteds = rows.map((n) => n.name);\n\t\t\tsetSelected(newSelecteds);\n\t\t\treturn;\n\t\t}\n\t\tsetSelected([]);\n\t};\n\n\tconst handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n\t\tconst selectedIndex = selected.indexOf(name);\n\t\tlet newSelected: string[] = [];\n\n\t\tif (selectedIndex === -1) {\n\t\t\tnewSelected = newSelected.concat(selected, name);\n\t\t} else if (selectedIndex === 0) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\n\t\t} else if (selectedIndex === selected.length - 1) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\n\t\t} else if (selectedIndex > 0) {\n\t\t\tnewSelected = newSelected.concat(\n\t\t\t\tselected.slice(0, selectedIndex),\n\t\t\t\tselected.slice(selectedIndex + 1)\n\t\t\t);\n\t\t}\n\n\t\tsetSelected(newSelected);\n\t};\n\n\tconst handleChangePage = (event: unknown, newPage: number) => {\n\t\tsetPage(newPage);\n\t};\n\n\tconst handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\n\t\tsetPage(0);\n\t};\n\n\tconst isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<EnhancedTableToolbar numSelected={selected.length} />\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\t\taria-label=\"enhanced table\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<EnhancedTableHead\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{stableSort(rows, getComparator(order, orderBy))\n\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t\t.map((row, index) => {\n\t\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.name);\n\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\t\tonClick={(\n\t\t\t\t\t\t\t\t\t\t\t\tevent: React.MouseEvent<unknown, MouseEvent>\n\t\t\t\t\t\t\t\t\t\t\t) => handleClick(event, row.name)}\n\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\t\tkey={row.name}\n\t\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"th\"\n\t\t\t\t\t\t\t\t\t\t\t\tid={labelId}\n\t\t\t\t\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\tpadding=\"none\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 50,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: 50,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: theme.spacing(2),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"https://picsum.photos/500\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"image-product\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme.shape.borderRadius,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.calories}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.fat}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.carbs}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.protein}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit fontSize=\"small\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{emptyRows > 0 && (\n\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={rows.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/pages/NotFound.tsx",[],"/home/quyet/FPT/pishop-web/src/components/home/ProductFC.tsx",["209","210","211","212","213"],"import {\n\tBox,\n\tButton,\n\tCard,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tCardMedia,\n\tChip,\n\tGrid,\n\tmakeStyles,\n\tTypography,\n\twithStyles,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Product } from \"../../models/Product\";\nimport { convertMonney } from \"../../utils/Utils\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t// maxWidth: 345,\n\t\t\"&:hover\": {\n\t\t\ttransform: \"translateY(-2px)\",\n\t\t\ttransition: \"transform 0.3s\",\n\t\t},\n\t},\n\tmedia: {\n\t\theight: 210,\n\t\tbackgroundSize: \"contain\",\n\t\tboxSizing: \"border-box\",\n\t},\n\tcardContent: {\n\t\tpadding: 10,\n\t\tmarginBottom: 10\n\t},\n}));\n\nexport default function ProductFC(props: Props) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<CardActionArea onClick={() => history.push(`/product/${props.item.id}`)}>\n\t\t\t\t<CardMedia className={classes.media} image={props.item.thumbs as any} title=\"img\" />\n\t\t\t\t<CardContent classes={{ root: classes.cardContent }}>\n\t\t\t\t\t<Box height={45}>\n\t\t\t\t\t\t<Typography style={{ fontSize: \"0.9rem\", fontWeight: 500 }}>\n\t\t\t\t\t\t\t{props.item.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t{props.item.discount > 0 ? (\n\t\t\t\t\t\t\t<Typography display=\"inline\">\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"1rem\", fontWeight: 500,  }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{convertMonney(\n\t\t\t\t\t\t\t\t\t\t(props.item.price / 100) * (100 - props.item.discount)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"line-through\", marginLeft: 4 }}\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{convertMonney(props.item.price)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{/* <Typography style={{ marginLeft: 4, color: \"#ee4d2d\" }} variant=\"caption\">\n\t\t\t\t\t\t\t\t\t-{props.item.discount}%\n\t\t\t\t\t\t\t\t</Typography> */}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography style={{ fontSize: \"1rem\", fontWeight: 500,  }}>\n\t\t\t\t\t\t\t\t{convertMonney(props.item.price)}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{/* <Typography\n\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tWebkitLineClamp: 2,\n\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\ttextOverflow: \"ellipsis\",\n\t\t\t\t\t\t\twordBreak: \"break-word\",\n\t\t\t\t\t\t\tdisplay: \"-webkit-box\",\n\t\t\t\t\t\t\tWebkitBoxOrient: \"vertical\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.item.description}\n\t\t\t\t\t</Typography> */}\n\t\t\t\t</CardContent>\n\t\t\t</CardActionArea>\n\t\t\t{/* <CardActions style={{ justifyContent: \"flex-end\" }}>\n\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</CardActions> */}\n\t\t</Card>\n\t);\n}\n\ntype Props = {\n\titem: Product;\n};\n","/home/quyet/FPT/pishop-web/src/controllers/index.ts",[],"/home/quyet/FPT/pishop-web/src/controllers/ProductController.ts",[],"/home/quyet/FPT/pishop-web/src/components/table/Toolbar.tsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import {\n\tBox,\n\tButton,\n\tcreateStyles,\n\tFormControl,\n\tIconButton,\n\tInputAdornment,\n\tInputLabel,\n\tlighten,\n\tmakeStyles,\n\tMenuItem,\n\tOutlinedInput,\n\tSelect,\n\tTheme,\n\tToolbar,\n\tTooltip,\n\tTypography,\n} from \"@material-ui/core\";\nimport { Add, Delete, FilterListRounded, Search } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { SearchingAlgorithm, SortingAlgorithm } from \"../../pages/admin/ProductTable2\";\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tpaddingLeft: theme.spacing(2),\n\t\t\tpaddingRight: theme.spacing(1),\n\t\t\tdisplay: \"flex\",\n\t\t\tjustifyContent: \"space-between\",\n\t\t},\n\t\thighlight:\n\t\t\ttheme.palette.type === \"light\"\n\t\t\t\t? {\n\t\t\t\t\t\tcolor: theme.palette.secondary.main,\n\t\t\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\tcolor: theme.palette.text.primary,\n\t\t\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\n\t\t\t\t  },\n\t\ttitle: {\n\t\t\tflex: \"1 1 100%\",\n\t\t},\n\t})\n);\n\nexport const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected } = props;\n\tconst [field, setField] = useState<string>(\"name\");\n\tconst [algorithm, setAlgorithm] = useState<SearchingAlgorithm>(\"linear\");\n\tconst [sortAlgorithm, setSortAlgorithm] = useState<SortingAlgorithm>(\"selection\");\n\n\tuseEffect(() => {\n\t\tif (field !== \"productCode\" && algorithm === \"binary\") {\n\t\t\tsetAlgorithm(\"linear\");\n\t\t\tprops.onChangeAlgorithm && props.onChangeAlgorithm(\"linear\");\n\t\t}\n\t}, [field]);\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{/* {numSelected > 0 ? (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t>\n\t\t\t\t\t{numSelected} selected\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t<Box style={{ display: \"flex\" }}>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<FormControl style={{ minWidth: 300 }} size=\"small\">\n\t\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\t\tstartAdornment={\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<Search color=\"disabled\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={props.onChangeText}\n\t\t\t\t\t\t\t></OutlinedInput>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box ml={2}>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" size=\"small\" style={{ minWidth: 140 }}>\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">Field</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\t\tvalue={field}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst value = e.target.value as string;\n\t\t\t\t\t\t\t\t\tsetField(value);\n\t\t\t\t\t\t\t\t\tprops.onChangeField && props.onChangeField(value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel=\"Field\"\n\t\t\t\t\t\t\t\tplaceholder=\"Order by\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=\"productCode\">Product Code</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value=\"name\">Name</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value=\"brand\">Brand</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box ml={2}>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" size=\"small\" style={{ minWidth: 160 }}>\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">\n\t\t\t\t\t\t\t\tSearching algorithms\n\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\t\tvalue={algorithm}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst value = e.target.value as SearchingAlgorithm;\n\t\t\t\t\t\t\t\t\tsetAlgorithm(value);\n\t\t\t\t\t\t\t\t\tprops.onChangeAlgorithm && props.onChangeAlgorithm(value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel=\"Searching algorithms\"\n\t\t\t\t\t\t\t\tplaceholder=\"Searching algorithms\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=\"linear\">Linear</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem disabled={field !== \"productCode\"} value=\"binary\">\n\t\t\t\t\t\t\t\t\tBinary\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box ml={2}>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" size=\"small\" style={{ minWidth: 130 }}>\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">\n\t\t\t\t\t\t\t\tSorting algorithm\n\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\t\tvalue={sortAlgorithm}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst value = e.target.value as SortingAlgorithm;\n\t\t\t\t\t\t\t\t\tsetSortAlgorithm(value);\n\t\t\t\t\t\t\t\t\tprops.onChangeSortAlg && props.onChangeSortAlg(value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel=\"Sorting algorithm\"\n\t\t\t\t\t\t\t\tplaceholder=\"Sorting algorithm\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=\"selection\">Selection</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value=\"bubble\">Bubble</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t)} */}\n\n\t\t\t{/* {numSelected > 0 ? (\n\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t<IconButton aria-label=\"delete\">\n\t\t\t\t\t\t<Delete />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t) : (\n\t\t\t\t<Tooltip title=\"Filter list\">\n\t\t\t\t\t<IconButton aria-label=\"filter list\">\n\t\t\t\t\t\t<FilterListRounded />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t)} */}\n\t\t\t<Box flex={1} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tstartIcon={<Add />}\n\t\t\t\t\tonClick={props.onAddNew}\n\t\t\t\t>\n\t\t\t\t\tAdd new\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t</Toolbar>\n\t);\n};\n\ninterface EnhancedTableToolbarProps {\n\tnumSelected: number;\n\tonChangeText?(e: any): void;\n\tonChangeField?(value: string | number): void;\n\tonChangeAlgorithm?(value: SearchingAlgorithm): void;\n\tonChangeSortAlg?(value: SortingAlgorithm): void;\n\tonAddNew?(): void;\n}\n","/home/quyet/FPT/pishop-web/src/pages/admin/ProductTable2.tsx",["230","231","232"],"import { Box, IconButton, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Edit, HighlightOff } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport ConfirmPopUp from \"../../components/ConfirmPopUp\";\nimport PopUpEdit from \"../../components/PopUpEdit\";\nimport EnhancedTableHead from \"../../components/table/TableHead\";\nimport { EnhancedTableToolbar } from \"../../components/table/Toolbar\";\nimport { categoryController, productController } from \"../../controllers\";\nimport { Order } from \"../../interface/IBaseController\";\nimport { Category } from \"../../models/Category\";\nimport { Paging } from \"../../models/Paging\";\nimport { Product } from \"../../models/Product\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\tpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t\ttable: {\n\t\t\tminWidth: 750,\n\t\t},\n\t\tvisuallyHidden: {\n\t\t\tborder: 0,\n\t\t\tclip: \"rect(0 0 0 0)\",\n\t\t\theight: 1,\n\t\t\tmargin: -1,\n\t\t\toverflow: \"hidden\",\n\t\t\tpadding: 0,\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 20,\n\t\t\twidth: 1,\n\t\t},\n\t})\n);\n\nconst ROWSPERPAGEOPTIONS = [7, 15, 25];\n\nexport type SearchingAlgorithm = \"linear\" | \"binary\";\nexport type SortingAlgorithm = \"selection\" | \"bubble\";\n\ninterface Query<T> {\n\tpage: number;\n\tpageSize: number;\n\torder?: Order;\n\torderBy?: keyof T;\n\tsearchText?: string;\n\tsearchField?: keyof T;\n\tsearchingAlgorithm?: SearchingAlgorithm;\n\tsortingAlgorithm?: SortingAlgorithm;\n}\n\nexport default function ProductTable2() {\n\tconst classes = useStyles();\n\tconst [confirmPopUp, setConfirmPopUp] = useState<boolean>(false);\n\tconst [popUpEdit, setPopUpEdit] = useState<boolean>(false);\n\n\tconst [selectedItem, setSelectedItem] = useState<Product>({\n\t\tid: \"\",\n\t\tcategoryId: \"1\",\n\t\tdescription: \"\",\n\t\tdiscount: 0,\n\t\tname: \"\",\n\t\tprice: 0,\n\t\tquantity: 0,\n\t});\n\tconst [query, setQuery] = React.useState<Query<Product>>({\n\t\tpage: 1,\n\t\tpageSize: ROWSPERPAGEOPTIONS[0],\n\t});\n\tconst [pagingItem, setPagingItem] = useState<Paging<Product>>({\n\t\tpage: 1,\n\t\tpageSize: 7,\n\t\trows: [],\n\t\ttotal: 1,\n\t\ttotalPages: 1,\n\t});\n\n\tconst [selected, setSelected] = React.useState<string[]>([]);\n\n\tconst handleChangePage = (event: unknown, newPage: number) => {\n\t\tsetQuery({ ...query, page: newPage + 1 });\n\t};\n\n\tconst handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetQuery({ ...query, pageSize: parseInt(event.target.value), page: 1 });\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(query);\n\t\tproductController.findAll(query).then((res) => {\n\t\t\tsetPagingItem(res);\n\t\t});\n\t}, [query]);\n\n\tconst [category, setCategory] = useState<Category[]>([]);\n\n\tuseEffect(() => {\n\t\tcategoryController.findAll({ page: 1, pageSize: 100 }).then((res) => {\n\t\t\tsetCategory(res.rows);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Box>\n\t\t\t\t<EnhancedTableToolbar\n\t\t\t\t\tonChangeText={(e) =>\n\t\t\t\t\t\tsetQuery({ ...query, searchText: e.target.value as string })\n\t\t\t\t\t}\n\t\t\t\t\tonChangeField={(value) => {\n\t\t\t\t\t\tsetQuery({ ...query, searchField: value as keyof Product });\n\t\t\t\t\t}}\n\t\t\t\t\tonChangeAlgorithm={(value) => {\n\t\t\t\t\t\tsetQuery({ ...query, searchingAlgorithm: value });\n\t\t\t\t\t}}\n\t\t\t\t\tonChangeSortAlg={(value) => {\n\t\t\t\t\t\tsetQuery({ ...query, sortingAlgorithm: value });\n\t\t\t\t\t}}\n\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\tonAddNew={() => {\n\t\t\t\t\t\tsetSelectedItem({\n\t\t\t\t\t\t\tcategoryId: \"\",\n\t\t\t\t\t\t\tdescription: \"\",\n\t\t\t\t\t\t\tdiscount: 0,\n\t\t\t\t\t\t\tid: \"\",\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tprice: 0,\n\t\t\t\t\t\t\tquantity: 1,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetPopUpEdit(true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\taria-label=\"enhanced table\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<EnhancedTableHead\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\t\t// order={query.order}\n\t\t\t\t\t\t\t// orderBy={query.orderBy}\n\t\t\t\t\t\t\t// onSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\t\tonRequestSort={() => {\n\t\t\t\t\t\t\t\t// handleRequestSort\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\trowCount={pagingItem.total}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TableBody color=\"primary\">\n\t\t\t\t\t\t\t{pagingItem.rows.map((item, index) => {\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\t// onClick={(event) => handleClick(event, row.name)}\n\t\t\t\t\t\t\t\t\t\t// role=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.id}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Box mr={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.thumbs ? (item.thumbs as any) : \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobjectFit: \"contain\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 50,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: 50,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>{item.name}</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.category?.name}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t{convertMonney(item.price)}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{item.quantity}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{item.discount}%</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 12 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPopUpEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedItem(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 12 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPopUp(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedItem(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<HighlightOff color=\"error\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t{/* <TableCell align=\"right\">{row.createdAt}</TableCell> */}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{/* {emptyRows > 0 && (\n\t\t\t\t\t\t\t\t<TableRow style={{ height: 53 * emptyRows }}>\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={ROWSPERPAGEOPTIONS}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={pagingItem.total}\n\t\t\t\t\trowsPerPage={pagingItem.pageSize}\n\t\t\t\t\tpage={pagingItem.page - 1}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<ConfirmPopUp\n\t\t\t\topen={confirmPopUp}\n\t\t\t\tonClose={() => setConfirmPopUp(false)}\n\t\t\t\tonConfirm={() => {\n\t\t\t\t\tproductController.delete(selectedItem.id.toString() || \"\")?.then((res) => {\n\t\t\t\t\t\tproductController.findAll(query).then((res) => {\n\t\t\t\t\t\t\tsetPagingItem(res);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tsetConfirmPopUp(false);\n\t\t\t\t}}\n\t\t\t></ConfirmPopUp>\n\t\t\t<PopUpEdit\n\t\t\t\titem={selectedItem}\n\t\t\t\topen={popUpEdit}\n\t\t\t\tonClose={() => setPopUpEdit(false)}\n\t\t\t\tonConfirm={(product) => {\n\t\t\t\t\tif (!product.category) {\n\t\t\t\t\t\tproduct.category = { id: product.categoryId, name: \"\" };\n\t\t\t\t\t}\n\t\t\t\t\tproductController.update(product).then((res) => {\n\t\t\t\t\t\tsetPopUpEdit(false);\n\t\t\t\t\t\tproductController.findAll(query).then((res) => {\n\t\t\t\t\t\t\tsetPagingItem(res);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tcategories={category}\n\t\t\t></PopUpEdit>\n\t\t</div>\n\t);\n}\n\nconst convertMonney = (price: number): string => {\n\tconst stringPrice = new Intl.NumberFormat(\"vi-VN\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"VND\",\n\t}).format(price);\n\treturn stringPrice;\n};\n\nconst getHightLightText = (value: string | number, searchText: string): React.ReactNode => {\n\tif (searchText) {\n\t\tconst regEx = new RegExp(searchText, \"i\");\n\t\tconst newValue = value\n\t\t\t.toString()\n\t\t\t.replace(regEx, '<span style=\"background-color:yellow;\">$&</span>');\n\t\treturn (\n\t\t\t<Typography\n\t\t\t\tdisplay=\"inline\"\n\t\t\t\tdangerouslySetInnerHTML={{ __html: newValue }}\n\t\t\t></Typography>\n\t\t);\n\t}\n\treturn value;\n};\n","/home/quyet/FPT/pishop-web/src/components/table/TableHead.tsx",["233"],"import {\n\tcreateStyles,\n\tmakeStyles,\n\tTableCell,\n\tTableHead,\n\tTableRow,\n\tTableSortLabel,\n\tTheme,\n\tTypography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Product } from \"../../models/Product\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\tpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t\ttable: {\n\t\t\tminWidth: 750,\n\t\t},\n\t\tvisuallyHidden: {\n\t\t\tborder: 0,\n\t\t\tclip: \"rect(0 0 0 0)\",\n\t\t\theight: 1,\n\t\t\tmargin: -1,\n\t\t\toverflow: \"hidden\",\n\t\t\tpadding: 0,\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 20,\n\t\t\twidth: 1,\n\t\t},\n\t})\n);\n\nexport interface HeadCell {\n\tid: keyof Product | \"actions\";\n\tlabel: string;\n\tnumeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n\t{ id: \"id\", numeric: false, label: \"Id\" },\n\t{ id: \"name\", numeric: false, label: \"Name\" },\n\t{ id: \"category.name\" as any, numeric: false, label: \"Brand\" },\n\t{ id: \"price\", numeric: true, label: \"Price\" },\n\t{ id: \"quantity\", numeric: true, label: \"Quantity\" },\n\t{ id: \"discount\", numeric: true, label: \"Discount\" },\n\t{ id: \"actions\", numeric: false, label: \"\" },\n];\n\ntype Order = \"asc\" | \"desc\";\n\ninterface EnhancedTableProps {\n\tclasses: ReturnType<typeof useStyles>;\n\tnumSelected: number;\n\tonRequestSort: ( property: keyof Product) => void;\n\tonSelectAllClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\torder?: Order;\n\torderBy?: string;\n\trowCount: number;\n}\n\nexport default function EnhancedTableHead(props: EnhancedTableProps) {\n\tconst { classes, order, orderBy, onRequestSort } = props;\n\tconst createSortHandler = (property: keyof Product) => {\n\t\tconsole.log(\"res\");\n\t\tonRequestSort( property);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t{headCells.map((headCell) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? \"right\" : \"left\"}\n\t\t\t\t\t\t// sortDirection={orderBy === headCell.id ? order : false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\t// active={orderBy === headCell.id}\n\t\t\t\t\t\t\t// direction={orderBy === headCell.id ? order : \"asc\"}\n\t\t\t\t\t\t\t// onClick={() => {\n\t\t\t\t\t\t\t// \tif (headCell.id !== \"actions\") {\n\t\t\t\t\t\t\t// \t\tconsole.log(true);\n\t\t\t\t\t\t\t// \t\tcreateSortHandler(headCell.id);\n\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography style={{ fontWeight: \"bolder\", fontSize: \"0.9rem\" }}>\n\t\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\n\t\t\t\t\t\t\t\t\t{order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/components/PopUpEdit.tsx",["234","235"],"import {\n\tBox,\n\tButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n\tFormControl,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n} from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Category } from \"../models/Category\";\nimport { Product } from \"../models/Product\";\nimport * as Yup from \"yup\";\n\ntype Props = {\n\topen: boolean;\n\tonClose?(): void;\n\tonConfirm(product: Product): void;\n\titem: Product;\n\tcategories: Category[];\n};\n\nconst ProductSchema = Yup.object().shape({\n\tthumbs: Yup.string(),\n\tname: Yup.string().required(\"Required\"),\n\tprice: Yup.number().min(0, \"Quantity > 0\").required(\"Required\"),\n\tquantity: Yup.number().min(1, \"Quantity > 0\").required(\"Required\"),\n\tdiscount: Yup.number().min(0, \"Discount >= 0\"),\n\tcategoryId: Yup.string()\n});\n\nexport default function PopUpEdit(props: Props) {\n\tconst [product, setProduct] = useState<Product>({\n\t\tid: \"\",\n\t\tcategoryId: \"1\",\n\t\tdescription: \"\",\n\t\tdiscount: 0,\n\t\tname: \"\",\n\t\tprice: 0,\n\t\tquantity: 0,\n\t});\n\n\tconst [filename, setFilename] = useState<string>(\"\");\n\n\tconst convertBase64 = (file: Blob) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst fileReader = new FileReader();\n\t\t\tfileReader.readAsDataURL(file);\n\t\t\tfileReader.onload = () => {\n\t\t\t\tresolve(fileReader.result);\n\t\t\t};\n\t\t\tfileReader.onerror = (error) => {\n\t\t\t\treject(error);\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleFileRead = async (event: any) => {\n\t\tconst file = event.target.files[0];\n\t\tsetFilename(file.name);\n\t\tconst base64 = await convertBase64(file);\n\t\tsetProduct({ ...product, thumbs: base64 as any });\n\t\tconsole.log(base64);\n\t};\n\n\tconst formik = useFormik({\n\t\tinitialValues: product,\n\t\tenableReinitialize: true,\n\t\tvalidationSchema: ProductSchema,\n\t\tonSubmit: (values, { setSubmitting }) => {\n\t\t\t// setSubmitting(true);\n\t\t\tconsole.log(values);\n\t\t\tprops.onClose && props.onClose();\n\t\t\tprops.onConfirm(values);\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tsetProduct({ ...props.item, thumbs: props.item.thumbs as any || \"\", categoryId: props.item.category?.id || \"1\" });\n\t}, [props]);\n\n\treturn (\n\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t<Dialog\n\t\t\t\topen={props.open}\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{props.item.name}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<Box display=\"flex\" mb={3}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tname={\"thumbs\"}\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\tvalue={formik.values.thumbs}\n\t\t\t\t\t\t\tlabel=\"Image\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t></TextField>\n\t\t\t\t\t\t<Box ml={2}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t\tid=\"contained-button-file\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tonChange={handleFileRead}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor=\"contained-button-file\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.name}\n\t\t\t\t\t\terror={!!formik.errors.name && formik.touched.name}\n\t\t\t\t\t\thelperText={formik.errors.name ? formik.errors.name : null}\n\t\t\t\t\t></TextField>\n\t\t\t\t\t<Box mt={3}>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">Brand</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\t\tvalue={product.categoryId || product.category?.id || \"1\"}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst value = e.target.value as string;\n\n\t\t\t\t\t\t\t\t\tsetProduct({\n\t\t\t\t\t\t\t\t\t\t...product,\n\t\t\t\t\t\t\t\t\t\tcategoryId: value,\n\t\t\t\t\t\t\t\t\t\tcategory: { name: product.category?.name || \"\", id: value },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel=\"Field\"\n\t\t\t\t\t\t\t\tplaceholder=\"Order by\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.categories.map((item) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem value={item.id}>{item.name}</MenuItem>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box mt={3} />\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={\"price\"}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.price}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tlabel=\"Price\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\terror={!!formik.errors.price && formik.touched.price}\n\t\t\t\t\t\thelperText={formik.errors.price ? formik.errors.price : null}\n\t\t\t\t\t></TextField>\n\t\t\t\t\t<Box mt={3} />\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={\"quantity\"}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.quantity}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tlabel=\"Quantity\"\n\t\t\t\t\t\terror={!!formik.errors.quantity && formik.touched.quantity}\n\t\t\t\t\t\thelperText={formik.errors.quantity ? formik.errors.quantity : null}\n\t\t\t\t\t></TextField>\n\t\t\t\t\t<Box mt={3} />\n\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={\"discount\"}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.discount}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tlabel=\"Discount\"\n\t\t\t\t\t\terror={!!formik.errors.discount && formik.touched.discount}\n\t\t\t\t\t\thelperText={formik.errors.discount ? formik.errors.discount : null}\n\t\t\t\t\t></TextField>\n\t\t\t\t\t<Box mt={3} />\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={\"discount\"}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.description}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t></TextField>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={() => {\n\t\t\t\t\t\tprops.onClose && props.onClose();\n\t\t\t\t\t\tformik.resetForm();\n\t\t\t\t\t}} color=\"primary\">\n\t\t\t\t\t\tCANCEL\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"submit\" onClick={formik.submitForm} color=\"primary\" autoFocus>\n\t\t\t\t\t\tSAVE\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</form>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/components/ConfirmPopUp.tsx",[],"/home/quyet/FPT/pishop-web/src/pages/admin/CategoryTable.tsx",["236","237","238","239","240","241"],"import { Box, IconButton, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Edit, HighlightOff } from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport ConfirmPopUp from \"../../components/ConfirmPopUp\";\nimport PopUpEditCategory from \"../../components/PopUpEditCategory\";\nimport TableHeadCategory from \"../../components/table/TableHeadCategory\";\nimport { EnhancedTableToolbar } from \"../../components/table/Toolbar\";\nimport { categoryController } from \"../../controllers\";\nimport { Order } from \"../../interface/IBaseController\";\nimport { Category } from \"../../models/Category\";\nimport { Paging } from \"../../models/Paging\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\tpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t\ttable: {\n\t\t\tminWidth: 750,\n\t\t},\n\t\tvisuallyHidden: {\n\t\t\tborder: 0,\n\t\t\tclip: \"rect(0 0 0 0)\",\n\t\t\theight: 1,\n\t\t\tmargin: -1,\n\t\t\toverflow: \"hidden\",\n\t\t\tpadding: 0,\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 20,\n\t\t\twidth: 1,\n\t\t},\n\t})\n);\n\nconst ROWSPERPAGEOPTIONS = [7, 15, 25];\n\nexport type SearchingAlgorithm = \"linear\" | \"binary\";\nexport type SortingAlgorithm = \"selection\" | \"bubble\";\n\ninterface Query<T> {\n\tpage: number;\n\tpageSize: number;\n\torder?: Order;\n\torderBy?: keyof T;\n\tsearchText?: string;\n\tsearchField?: keyof T;\n\tsearchingAlgorithm?: SearchingAlgorithm;\n\tsortingAlgorithm?: SortingAlgorithm;\n}\n\nexport default function CategoryTable() {\n\tconst classes = useStyles();\n\tconst [confirmPopUp, setConfirmPopUp] = useState<boolean>(false);\n\tconst [popUpEdit, setPopUpEdit] = useState<boolean>(false);\n\tconst { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n\tconst [selectedItem, setSelectedItem] = useState<Category>({\n\t\tid: \"\",\n\t\tname: \"\",\n\t});\n\tconst [query, setQuery] = React.useState<Query<Category>>({\n\t\tpage: 1,\n\t\tpageSize: ROWSPERPAGEOPTIONS[0],\n\t});\n\tconst [pagingItem, setPagingItem] = useState<Paging<Category>>({\n\t\tpage: 1,\n\t\tpageSize: 7,\n\t\trows: [],\n\t\ttotal: 1,\n\t\ttotalPages: 1,\n\t});\n\n\tconst [selected, setSelected] = React.useState<string[]>([]);\n\n\tconst handleChangePage = (event: unknown, newPage: number) => {\n\t\tsetQuery({ ...query, page: newPage + 1 });\n\t};\n\n\tconst handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetQuery({ ...query, pageSize: parseInt(event.target.value, 10), page: 1 });\n\t};\n\n\tuseEffect(() => {\n\t\tcategoryController.findAll(query).then((res) => {\n\t\t\tsetPagingItem(res);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Box>\n\t\t\t\t<EnhancedTableToolbar\n\t\t\t\t\t// onChangeText={(e) =>\n\t\t\t\t\t// \tsetQuery({ ...query, searchText: e.target.value as string })\n\t\t\t\t\t// }\n\t\t\t\t\t// onChangeField={(value) => {\n\t\t\t\t\t// \tsetQuery({ ...query, searchField: value as keyof Product });\n\t\t\t\t\t// }}\n\t\t\t\t\tonChangeAlgorithm={(value) => {\n\t\t\t\t\t\tsetQuery({ ...query, searchingAlgorithm: value });\n\t\t\t\t\t}}\n\t\t\t\t\tonChangeSortAlg={(value) => {\n\t\t\t\t\t\tsetQuery({ ...query, sortingAlgorithm: value });\n\t\t\t\t\t}}\n\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\tonAddNew={() => {\n\t\t\t\t\t\tsetPopUpEdit(true);\n\t\t\t\t\t\tsetSelectedItem({ id: \"\", name: \"\" });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\taria-label=\"enhanced table\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableHeadCategory\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\t\t// order={query.order}\n\t\t\t\t\t\t\t// orderBy={query.orderBy}\n\t\t\t\t\t\t\t// onSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\t\tonRequestSort={() => {\n\t\t\t\t\t\t\t\t// handleRequestSort\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\trowCount={pagingItem.total}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TableBody color=\"primary\">\n\t\t\t\t\t\t\t{pagingItem.rows.map((item, index) => {\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\t// onClick={(event) => handleClick(event, row.name)}\n\t\t\t\t\t\t\t\t\t\t// role=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.id}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{item.name}</TableCell>\n\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 12 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPopUpEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedItem(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 12 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPopUp(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedItem(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<HighlightOff color=\"error\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t{/* <TableCell align=\"right\">{row.createdAt}</TableCell> */}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{/* {emptyRows > 0 && (\n\t\t\t\t\t\t\t\t<TableRow style={{ height: 53 * emptyRows }}>\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={ROWSPERPAGEOPTIONS}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={pagingItem.total}\n\t\t\t\t\trowsPerPage={pagingItem.pageSize}\n\t\t\t\t\tpage={pagingItem.page - 1}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<ConfirmPopUp\n\t\t\t\topen={confirmPopUp}\n\t\t\t\tonClose={() => setConfirmPopUp(false)}\n\t\t\t\tonConfirm={() => {\n\t\t\t\t\tcategoryController\n\t\t\t\t\t\t.delete(selectedItem.id || \"\")\n\t\t\t\t\t\t?.then((res) => {\n\t\t\t\t\t\t\tcategoryController.findAll(query).then((res) => {\n\t\t\t\t\t\t\t\tsetPagingItem(res);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tenqueueSnackbar(\"Have an error!\", { variant: \"error\" });\n\t\t\t\t\t\t});\n\n\t\t\t\t\tsetConfirmPopUp(false);\n\t\t\t\t}}\n\t\t\t></ConfirmPopUp>\n\t\t\t<PopUpEditCategory\n\t\t\t\titem={selectedItem}\n\t\t\t\topen={popUpEdit}\n\t\t\t\tonClose={() => setPopUpEdit(false)}\n\t\t\t\tonConfirm={(category) => {\n\t\t\t\t\tcategoryController.update(category).then((res) => {\n\t\t\t\t\t\tsetPopUpEdit(false);\n\t\t\t\t\t\tcategoryController.findAll(query).then((res) => {\n\t\t\t\t\t\t\tsetPagingItem(res);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t></PopUpEditCategory>\n\t\t</div>\n\t);\n}\n\nconst convertMonney = (price: number): string => {\n\tconst stringPrice = new Intl.NumberFormat(\"vi-VN\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"VND\",\n\t}).format(price);\n\treturn stringPrice;\n};\n\nconst getHightLightText = (value: string | number, searchText: string): React.ReactNode => {\n\tif (searchText) {\n\t\tconst regEx = new RegExp(searchText, \"i\");\n\t\tconst newValue = value\n\t\t\t.toString()\n\t\t\t.replace(regEx, '<span style=\"background-color:yellow;\">$&</span>');\n\t\treturn (\n\t\t\t<Typography\n\t\t\t\tdisplay=\"inline\"\n\t\t\t\tdangerouslySetInnerHTML={{ __html: newValue }}\n\t\t\t></Typography>\n\t\t);\n\t}\n\treturn value;\n};\n","/home/quyet/FPT/pishop-web/src/controllers/CategoryController.ts",["242"],"import { ICategoryController } from \"../interface/ICategoryController\";\nimport { Category } from \"../models/Category\";\nimport { Product } from \"../models/Product\";\nimport { BaseController } from \"./BaseController\";\n\nexport class CategoryController extends BaseController<Category> implements ICategoryController {}\n","/home/quyet/FPT/pishop-web/src/components/table/TableHeadCategory.tsx",["243","244"],"import {\n\tcreateStyles,\n\tmakeStyles,\n\tTableCell,\n\tTableHead,\n\tTableRow,\n\tTableSortLabel,\n\tTheme,\n\tTypography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Order } from \"../../interface/IBaseController\";\nimport { Category } from \"../../models/Category\";\nimport { Product } from \"../../models/Product\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\tpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t\ttable: {\n\t\t\tminWidth: 750,\n\t\t},\n\t\tvisuallyHidden: {\n\t\t\tborder: 0,\n\t\t\tclip: \"rect(0 0 0 0)\",\n\t\t\theight: 1,\n\t\t\tmargin: -1,\n\t\t\toverflow: \"hidden\",\n\t\t\tpadding: 0,\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 20,\n\t\t\twidth: 1,\n\t\t},\n\t})\n);\n\nexport interface HeadCell {\n\tid: keyof Category | \"actions\";\n\tlabel: string;\n\tnumeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n\t{ id: \"id\", numeric: false, label: \"Id\" },\n\t{ id: \"name\", numeric: false, label: \"Name\" },\n\t{ id: \"actions\", numeric: false, label: \"\" },\n];\n\ninterface EnhancedTableProps {\n\tclasses: ReturnType<typeof useStyles>;\n\tnumSelected: number;\n\tonRequestSort: ( property: keyof Category) => void;\n\tonSelectAllClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\torder?: Order;\n\torderBy?: string;\n\trowCount: number;\n}\n\nexport default function TableHeadCategory(props: EnhancedTableProps) {\n\tconst { classes, order, orderBy, onRequestSort } = props;\n\tconst createSortHandler = (property: keyof Category) => {\n\t\tconsole.log(\"res\");\n\t\tonRequestSort( property);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t{headCells.map((headCell) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? \"right\" : \"left\"}\n\t\t\t\t\t\t// sortDirection={orderBy === headCell.id ? order : false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\t// active={orderBy === headCell.id}\n\t\t\t\t\t\t\t// direction={orderBy === headCell.id ? order : \"asc\"}\n\t\t\t\t\t\t\t// onClick={() => {\n\t\t\t\t\t\t\t// \tif (headCell.id !== \"actions\") {\n\t\t\t\t\t\t\t// \t\tconsole.log(true);\n\t\t\t\t\t\t\t// \t\tcreateSortHandler(headCell.id);\n\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography style={{ fontWeight: \"bolder\", fontSize: \"0.9rem\" }}>\n\t\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\n\t\t\t\t\t\t\t\t\t{order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n}\n","/home/quyet/FPT/pishop-web/src/components/PopUpEditCategory.tsx",["245","246","247","248","249","250","251"],"/home/quyet/FPT/pishop-web/src/components/auth/AuthWrapper.tsx",[],"/home/quyet/FPT/pishop-web/src/utils/Utils.ts",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":18},{"ruleId":"256","severity":1,"message":"260","line":1,"column":20,"nodeType":"258","messageId":"259","endLine":1,"endColumn":32},{"ruleId":"256","severity":1,"message":"261","line":44,"column":9,"nodeType":"258","messageId":"259","endLine":44,"endColumn":14},{"ruleId":"256","severity":1,"message":"262","line":44,"column":16,"nodeType":"258","messageId":"259","endLine":44,"endColumn":24},{"ruleId":"256","severity":1,"message":"263","line":4,"column":2,"nodeType":"258","messageId":"259","endLine":4,"endColumn":11},{"ruleId":"256","severity":1,"message":"264","line":21,"column":8,"nodeType":"258","messageId":"259","endLine":21,"endColumn":12},{"ruleId":"265","severity":1,"message":"266","line":96,"column":5,"nodeType":"267","endLine":96,"endColumn":7,"suggestions":"268"},{"ruleId":"252","replacedBy":"269"},{"ruleId":"254","replacedBy":"270"},{"ruleId":"252","replacedBy":"271"},{"ruleId":"254","replacedBy":"272"},{"ruleId":"252","replacedBy":"273"},{"ruleId":"254","replacedBy":"274"},{"ruleId":"256","severity":1,"message":"275","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":20},{"ruleId":"256","severity":1,"message":"276","line":60,"column":9,"nodeType":"258","messageId":"259","endLine":60,"endColumn":15},{"ruleId":"256","severity":1,"message":"277","line":60,"column":17,"nodeType":"258","messageId":"259","endLine":60,"endColumn":26},{"ruleId":"252","replacedBy":"278"},{"ruleId":"254","replacedBy":"279"},{"ruleId":"252","replacedBy":"280"},{"ruleId":"254","replacedBy":"281"},{"ruleId":"252","replacedBy":"282"},{"ruleId":"254","replacedBy":"283"},{"ruleId":"256","severity":1,"message":"284","line":28,"column":10,"nodeType":"258","messageId":"259","endLine":28,"endColumn":25},{"ruleId":"256","severity":1,"message":"285","line":28,"column":27,"nodeType":"258","messageId":"259","endLine":28,"endColumn":40},{"ruleId":"256","severity":1,"message":"286","line":29,"column":10,"nodeType":"258","messageId":"259","endLine":29,"endColumn":13},{"ruleId":"265","severity":1,"message":"287","line":60,"column":5,"nodeType":"267","endLine":60,"endColumn":7,"suggestions":"288"},{"ruleId":"256","severity":1,"message":"289","line":189,"column":11,"nodeType":"258","messageId":"259","endLine":189,"endColumn":20},{"ruleId":"252","replacedBy":"290"},{"ruleId":"254","replacedBy":"291"},{"ruleId":"256","severity":1,"message":"292","line":15,"column":16,"nodeType":"258","messageId":"259","endLine":15,"endColumn":24},{"ruleId":"256","severity":1,"message":"293","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"286","line":10,"column":16,"nodeType":"258","messageId":"259","endLine":10,"endColumn":19},{"ruleId":"256","severity":1,"message":"294","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"295","line":18,"column":2,"nodeType":"258","messageId":"259","endLine":18,"endColumn":10},{"ruleId":"256","severity":1,"message":"296","line":21,"column":8,"nodeType":"258","messageId":"259","endLine":21,"endColumn":16},{"ruleId":"256","severity":1,"message":"297","line":25,"column":8,"nodeType":"258","messageId":"259","endLine":25,"endColumn":19},{"ruleId":"256","severity":1,"message":"298","line":108,"column":8,"nodeType":"258","messageId":"259","endLine":108,"endColumn":13},{"ruleId":"256","severity":1,"message":"299","line":109,"column":15,"nodeType":"258","messageId":"259","endLine":109,"endColumn":22},{"ruleId":"252","replacedBy":"300"},{"ruleId":"254","replacedBy":"301"},{"ruleId":"252","replacedBy":"302"},{"ruleId":"254","replacedBy":"303"},{"ruleId":"256","severity":1,"message":"304","line":1,"column":59,"nodeType":"258","messageId":"259","endLine":1,"endColumn":68},{"ruleId":"256","severity":1,"message":"305","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":24},{"ruleId":"256","severity":1,"message":"306","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":14},{"ruleId":"256","severity":1,"message":"307","line":127,"column":8,"nodeType":"258","messageId":"259","endLine":127,"endColumn":25},{"ruleId":"256","severity":1,"message":"308","line":280,"column":16,"nodeType":"258","messageId":"259","endLine":280,"endColumn":24},{"ruleId":"309","severity":1,"message":"310","line":390,"column":15,"nodeType":"311","endLine":398,"endColumn":17},{"ruleId":"256","severity":1,"message":"312","line":3,"column":2,"nodeType":"258","messageId":"259","endLine":3,"endColumn":8},{"ruleId":"256","severity":1,"message":"313","line":6,"column":2,"nodeType":"258","messageId":"259","endLine":6,"endColumn":13},{"ruleId":"256","severity":1,"message":"314","line":9,"column":2,"nodeType":"258","messageId":"259","endLine":9,"endColumn":6},{"ruleId":"256","severity":1,"message":"315","line":10,"column":2,"nodeType":"258","messageId":"259","endLine":10,"endColumn":6},{"ruleId":"256","severity":1,"message":"316","line":13,"column":2,"nodeType":"258","messageId":"259","endLine":13,"endColumn":12},{"ruleId":"256","severity":1,"message":"317","line":5,"column":2,"nodeType":"258","messageId":"259","endLine":5,"endColumn":13},{"ruleId":"256","severity":1,"message":"318","line":6,"column":2,"nodeType":"258","messageId":"259","endLine":6,"endColumn":12},{"ruleId":"256","severity":1,"message":"319","line":7,"column":2,"nodeType":"258","messageId":"259","endLine":7,"endColumn":16},{"ruleId":"256","severity":1,"message":"320","line":8,"column":2,"nodeType":"258","messageId":"259","endLine":8,"endColumn":12},{"ruleId":"256","severity":1,"message":"321","line":11,"column":2,"nodeType":"258","messageId":"259","endLine":11,"endColumn":10},{"ruleId":"256","severity":1,"message":"322","line":12,"column":2,"nodeType":"258","messageId":"259","endLine":12,"endColumn":15},{"ruleId":"256","severity":1,"message":"323","line":13,"column":2,"nodeType":"258","messageId":"259","endLine":13,"endColumn":8},{"ruleId":"256","severity":1,"message":"324","line":16,"column":2,"nodeType":"258","messageId":"259","endLine":16,"endColumn":9},{"ruleId":"256","severity":1,"message":"325","line":17,"column":2,"nodeType":"258","messageId":"259","endLine":17,"endColumn":12},{"ruleId":"256","severity":1,"message":"326","line":19,"column":15,"nodeType":"258","messageId":"259","endLine":19,"endColumn":21},{"ruleId":"256","severity":1,"message":"327","line":19,"column":23,"nodeType":"258","messageId":"259","endLine":19,"endColumn":40},{"ruleId":"256","severity":1,"message":"328","line":19,"column":42,"nodeType":"258","messageId":"259","endLine":19,"endColumn":48},{"ruleId":"256","severity":1,"message":"329","line":51,"column":16,"nodeType":"258","messageId":"259","endLine":51,"endColumn":24},{"ruleId":"256","severity":1,"message":"330","line":53,"column":9,"nodeType":"258","messageId":"259","endLine":53,"endColumn":22},{"ruleId":"256","severity":1,"message":"331","line":53,"column":24,"nodeType":"258","messageId":"259","endLine":53,"endColumn":40},{"ruleId":"265","severity":1,"message":"332","line":60,"column":5,"nodeType":"267","endLine":60,"endColumn":12,"suggestions":"333"},{"ruleId":"256","severity":1,"message":"334","line":89,"column":19,"nodeType":"258","messageId":"259","endLine":89,"endColumn":30},{"ruleId":"256","severity":1,"message":"335","line":164,"column":15,"nodeType":"258","messageId":"259","endLine":164,"endColumn":22},{"ruleId":"256","severity":1,"message":"336","line":286,"column":7,"nodeType":"258","messageId":"259","endLine":286,"endColumn":24},{"ruleId":"256","severity":1,"message":"307","line":70,"column":8,"nodeType":"258","messageId":"259","endLine":70,"endColumn":25},{"ruleId":"256","severity":1,"message":"337","line":7,"column":2,"nodeType":"258","messageId":"259","endLine":7,"endColumn":19},{"ruleId":"256","severity":1,"message":"338","line":49,"column":9,"nodeType":"258","messageId":"259","endLine":49,"endColumn":17},{"ruleId":"256","severity":1,"message":"285","line":67,"column":27,"nodeType":"258","messageId":"259","endLine":67,"endColumn":40},{"ruleId":"256","severity":1,"message":"334","line":85,"column":19,"nodeType":"258","messageId":"259","endLine":85,"endColumn":30},{"ruleId":"265","severity":1,"message":"339","line":99,"column":5,"nodeType":"267","endLine":99,"endColumn":7,"suggestions":"340"},{"ruleId":"256","severity":1,"message":"335","line":143,"column":15,"nodeType":"258","messageId":"259","endLine":143,"endColumn":22},{"ruleId":"256","severity":1,"message":"341","line":235,"column":7,"nodeType":"258","messageId":"259","endLine":235,"endColumn":20},{"ruleId":"256","severity":1,"message":"336","line":243,"column":7,"nodeType":"258","messageId":"259","endLine":243,"endColumn":24},{"ruleId":"256","severity":1,"message":"342","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":17},{"ruleId":"256","severity":1,"message":"342","line":14,"column":10,"nodeType":"258","messageId":"259","endLine":14,"endColumn":17},{"ruleId":"256","severity":1,"message":"307","line":66,"column":8,"nodeType":"258","messageId":"259","endLine":66,"endColumn":25},{"ruleId":"256","severity":1,"message":"343","line":2,"column":2,"nodeType":"258","messageId":"259","endLine":2,"endColumn":5},{"ruleId":"256","severity":1,"message":"337","line":7,"column":2,"nodeType":"258","messageId":"259","endLine":7,"endColumn":19},{"ruleId":"256","severity":1,"message":"317","line":9,"column":2,"nodeType":"258","messageId":"259","endLine":9,"endColumn":13},{"ruleId":"256","severity":1,"message":"320","line":10,"column":2,"nodeType":"258","messageId":"259","endLine":10,"endColumn":12},{"ruleId":"256","severity":1,"message":"321","line":11,"column":2,"nodeType":"258","messageId":"259","endLine":11,"endColumn":10},{"ruleId":"256","severity":1,"message":"323","line":12,"column":2,"nodeType":"258","messageId":"259","endLine":12,"endColumn":8},{"ruleId":"256","severity":1,"message":"342","line":17,"column":10,"nodeType":"258","messageId":"259","endLine":17,"endColumn":17},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"@typescript-eslint/no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'ListItemIcon' is defined but never used.","'brand' is assigned a value but never used.","'setBrand' is assigned a value but never used.","'Container' is defined but never used.","'Cart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["346"],["344"],["345"],["344"],["345"],["344"],["345"],"'CommonSelect' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.",["344"],["345"],["344"],["345"],["344"],["345"],"'enqueueSnackbar' is assigned a value but never used.","'closeSnackbar' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'path'. Either include them or remove the dependency array.",["347"],"'UserLogin' is defined but never used.",["344"],["345"],"'setError' is assigned a value but never used.","'AuthWrapper' is defined but never used.","'CssBaseline' is defined but never used.","'Settings' is defined but never used.","'MenuIcon' is defined but never used.","'ProductList' is defined but never used.","'theme' is assigned a value but never used.","'setOpen' is assigned a value but never used.",["344"],["345"],["344"],["345"],"'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'createSortHandler' is assigned a value but never used.","'setDense' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","'CardActions' is defined but never used.","'Chip' is defined but never used.","'Grid' is defined but never used.","'withStyles' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'OutlinedInput' is defined but never used.","'Select' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.","'Delete' is defined but never used.","'FilterListRounded' is defined but never used.","'Search' is defined but never used.","'setField' is assigned a value but never used.","'sortAlgorithm' is assigned a value but never used.","'setSortAlgorithm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'algorithm' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["348"],"'setSelected' is assigned a value but never used.","'labelId' is assigned a value but never used.","'getHightLightText' is assigned a value but never used.","'DialogContentText' is defined but never used.","'filename' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["349"],"'convertMonney' is assigned a value but never used.","'Product' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [productId]",{"range":"358","text":"359"},"Update the dependencies array to be: [history, path]",{"range":"360","text":"361"},"Update the dependencies array to be: [algorithm, field, props]",{"range":"362","text":"363"},"Update the dependencies array to be: [query]",{"range":"364","text":"365"},[2179,2181],"[productId]",[1712,1714],"[history, path]",[1544,1551],"[algorithm, field, props]",[2912,2914],"[query]"]